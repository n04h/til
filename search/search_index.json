{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066 \u3053\u306e\u30b5\u30a4\u30c8\u306f\u30a4\u30f3\u30d7\u30c3\u30c8\u3057\u305f\u77e5\u8b58\u306a\u3069\u3092Markdown\u306b\u66f8\u304d\u4e0a\u3052\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3057\u305f\u3082\u306e\u3092\u3001 MkDocs\u3067\u30b5\u30a4\u30c8\u5316\u3057\u305f\u3082\u306e\u3067\u3059\u3002","title":"Home"},{"location":"#_1","text":"\u3053\u306e\u30b5\u30a4\u30c8\u306f\u30a4\u30f3\u30d7\u30c3\u30c8\u3057\u305f\u77e5\u8b58\u306a\u3069\u3092Markdown\u306b\u66f8\u304d\u4e0a\u3052\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3057\u305f\u3082\u306e\u3092\u3001 MkDocs\u3067\u30b5\u30a4\u30c8\u5316\u3057\u305f\u3082\u306e\u3067\u3059\u3002","title":"\u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066"},{"location":"api/twitch/get_channel_id_by_user/","text":"Twitch API Get channel id by user [GET] Endpoint 1 https://api.twitch.tv/kraken/users Param 1 login=userid Header 1 2 Accept : application / vnd . twitchtv . v5 + json Client - ID : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 { \"_total\" : 1 , \"users\" :[ { \"display_name\" : \"n004h\" , \"_id\" : \"56808214\" , \"name\" : \"n004h\" , \"type\" : \"user\" , \"bio\" : null , \"created_at\" : \"2014-02-15T05:36:29.050052Z\" , \"updated_at\" : \"2019-03-03T13:55:07.451596Z\" , \"logo\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/fe23c997-5fc7-4982-b8e1-51200da757b6-profile_image-300x300.jpeg\" } ] }","title":"get_channel_id_by_user"},{"location":"api/twitch/get_channel_id_by_user/#twitch-api-get-channel-id-by-user","text":"","title":"Twitch API Get channel id by user"},{"location":"api/twitch/get_channel_id_by_user/#get-endpoint","text":"1 https://api.twitch.tv/kraken/users","title":"[GET] Endpoint"},{"location":"api/twitch/get_channel_id_by_user/#param","text":"1 login=userid","title":"Param"},{"location":"api/twitch/get_channel_id_by_user/#header","text":"1 2 Accept : application / vnd . twitchtv . v5 + json Client - ID : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX","title":"Header"},{"location":"api/twitch/get_channel_id_by_user/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 { \"_total\" : 1 , \"users\" :[ { \"display_name\" : \"n004h\" , \"_id\" : \"56808214\" , \"name\" : \"n004h\" , \"type\" : \"user\" , \"bio\" : null , \"created_at\" : \"2014-02-15T05:36:29.050052Z\" , \"updated_at\" : \"2019-03-03T13:55:07.451596Z\" , \"logo\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/fe23c997-5fc7-4982-b8e1-51200da757b6-profile_image-300x300.jpeg\" } ] }","title":"Response"},{"location":"api/twitch/get_channel_info_by_channel_id/","text":"Twitch API Get channel info by ChannelID [GET] Endpoint 1 https://api.twitch.tv/kraken/channels/<CHANNEL_ID> Param 1 Header 1 2 3 Accept : application / vnd . twitchtv . v5 + json Client - ID : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Authorization : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"mature\" : false , \"status\" : \"test\" , \"broadcaster_language\" : \"ja\" , \"broadcaster_software\" : \"unknown_rtmp\" , \"display_name\" : \"n004h\" , \"game\" : \"Rocket League\" , \"language\" : \"ja\" , \"_id\" : \"56808214\" , \"name\" : \"n004h\" , \"created_at\" : \"2014-02-15T05:36:29Z\" , \"updated_at\" : \"2019-03-03T13:55:07Z\" , \"partner\" : false , \"logo\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/fe23c997-5fc7-4982-b8e1-51200da757b6-profile_image-300x300.jpeg\" , \"video_banner\" : null , \"profile_banner\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/n004h-profile_banner-c552e95fa3ca26d6-480.jpeg\" , \"profile_banner_background_color\" : null , \"url\" : \"https://www.twitch.tv/n004h\" , \"views\" : 145 , \"followers\" : 9 , \"broadcaster_type\" : \"\" , \"description\" : \"\" , \"private_video\" : false , \"privacy_options_enabled\" : false }","title":"get_channel_info_by_channel_id"},{"location":"api/twitch/get_channel_info_by_channel_id/#twitch-api-get-channel-info-by-channelid","text":"","title":"Twitch API Get channel info by ChannelID"},{"location":"api/twitch/get_channel_info_by_channel_id/#get-endpoint","text":"1 https://api.twitch.tv/kraken/channels/<CHANNEL_ID>","title":"[GET] Endpoint"},{"location":"api/twitch/get_channel_info_by_channel_id/#param","text":"1","title":"Param"},{"location":"api/twitch/get_channel_info_by_channel_id/#header","text":"1 2 3 Accept : application / vnd . twitchtv . v5 + json Client - ID : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Authorization : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX","title":"Header"},{"location":"api/twitch/get_channel_info_by_channel_id/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"mature\" : false , \"status\" : \"test\" , \"broadcaster_language\" : \"ja\" , \"broadcaster_software\" : \"unknown_rtmp\" , \"display_name\" : \"n004h\" , \"game\" : \"Rocket League\" , \"language\" : \"ja\" , \"_id\" : \"56808214\" , \"name\" : \"n004h\" , \"created_at\" : \"2014-02-15T05:36:29Z\" , \"updated_at\" : \"2019-03-03T13:55:07Z\" , \"partner\" : false , \"logo\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/fe23c997-5fc7-4982-b8e1-51200da757b6-profile_image-300x300.jpeg\" , \"video_banner\" : null , \"profile_banner\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/n004h-profile_banner-c552e95fa3ca26d6-480.jpeg\" , \"profile_banner_background_color\" : null , \"url\" : \"https://www.twitch.tv/n004h\" , \"views\" : 145 , \"followers\" : 9 , \"broadcaster_type\" : \"\" , \"description\" : \"\" , \"private_video\" : false , \"privacy_options_enabled\" : false }","title":"Response"},{"location":"api/twitch/get_stream_by_channel_id/","text":"Twitch API Get stream by channel id [GET] Endpoint 1 https://api.twitch.tv/kraken/streams/<CHANNEL_ID> Param 1 Header 1 2 Accept : application / vnd . twitchtv . v5 + json Client - ID : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Response (ONLINE) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 { \"stream\" : { \"_id\" : 23932774784 , \"game\" : \"BATMAN - The Telltale Series\" , \"viewers\" : 7254 , \"video_height\" : 720 , \"average_fps\" : 60 , \"delay\" : 0 , \"created_at\" : \"2016-12-14T22:49:56Z\" , \"is_playlist\" : false , \"preview\" : { \"small\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-80x45.jpg\" , \"medium\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-320x180.jpg\" , \"large\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-640x360.jpg\" , \"template\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-{width}x{height}.jpg\" }, \"channel\" : { \"mature\" : false , \"status\" : \"Dan is Batman? - Telltale's Batman\" , \"broadcaster_language\" : \"en\" , \"display_name\" : \"DansGaming\" , \"game\" : \"BATMAN - The Telltale Series\" , \"language\" : \"en\" , \"_id\" : 7236692 , \"name\" : \"dansgaming\" , \"created_at\" : \"2009-07-15T03:02:41Z\" , \"updated_at\" : \"2016-12-15T01:33:58Z\" , \"partner\" : true , \"logo\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/dansgaming-profile_image-76e4a4ab9388bc9c-300x300.png\" , \"video_banner\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/dansgaming-channel_offline_image-d3551503c24c08ad-1920x1080.png\" , \"profile_banner\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/dansgaming-profile_banner-4c2b8ece8cd010b4-480.jpeg\" , \"profile_banner_background_color\" : null , \"url\" : \"https://www.twitch.tv/dansgaming\" , \"views\" : 63906830 , \"followers\" : 538598 } } } Response (OFFLINE) 1 2 3 { \"stream\" : null }","title":"get_stream_by_channel_id"},{"location":"api/twitch/get_stream_by_channel_id/#twitch-api-get-stream-by-channel-id","text":"","title":"Twitch API Get stream by channel id"},{"location":"api/twitch/get_stream_by_channel_id/#get-endpoint","text":"1 https://api.twitch.tv/kraken/streams/<CHANNEL_ID>","title":"[GET] Endpoint"},{"location":"api/twitch/get_stream_by_channel_id/#param","text":"1","title":"Param"},{"location":"api/twitch/get_stream_by_channel_id/#header","text":"1 2 Accept : application / vnd . twitchtv . v5 + json Client - ID : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX","title":"Header"},{"location":"api/twitch/get_stream_by_channel_id/#response-online","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 { \"stream\" : { \"_id\" : 23932774784 , \"game\" : \"BATMAN - The Telltale Series\" , \"viewers\" : 7254 , \"video_height\" : 720 , \"average_fps\" : 60 , \"delay\" : 0 , \"created_at\" : \"2016-12-14T22:49:56Z\" , \"is_playlist\" : false , \"preview\" : { \"small\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-80x45.jpg\" , \"medium\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-320x180.jpg\" , \"large\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-640x360.jpg\" , \"template\" : \"https://static-cdn.jtvnw.net/previews-ttv/live_user_dansgaming-{width}x{height}.jpg\" }, \"channel\" : { \"mature\" : false , \"status\" : \"Dan is Batman? - Telltale's Batman\" , \"broadcaster_language\" : \"en\" , \"display_name\" : \"DansGaming\" , \"game\" : \"BATMAN - The Telltale Series\" , \"language\" : \"en\" , \"_id\" : 7236692 , \"name\" : \"dansgaming\" , \"created_at\" : \"2009-07-15T03:02:41Z\" , \"updated_at\" : \"2016-12-15T01:33:58Z\" , \"partner\" : true , \"logo\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/dansgaming-profile_image-76e4a4ab9388bc9c-300x300.png\" , \"video_banner\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/dansgaming-channel_offline_image-d3551503c24c08ad-1920x1080.png\" , \"profile_banner\" : \"https://static-cdn.jtvnw.net/jtv_user_pictures/dansgaming-profile_banner-4c2b8ece8cd010b4-480.jpeg\" , \"profile_banner_background_color\" : null , \"url\" : \"https://www.twitch.tv/dansgaming\" , \"views\" : 63906830 , \"followers\" : 538598 } } }","title":"Response (ONLINE)"},{"location":"api/twitch/get_stream_by_channel_id/#response-offline","text":"1 2 3 { \"stream\" : null }","title":"Response (OFFLINE)"},{"location":"docker/basic/","text":"Docker \u53c2\u8003:Qiita \u30b3\u30de\u30f3\u30c9\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8:Qiita \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb Mac: Docker for Mac docker version \u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u30a4\u30f3\u30b9\u30c8\u30fc\u30ebOK 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 $ docker version Client: Docker Engine - Community Version: 18 .09.2 API version: 1 .39 Go version: go1.10.8 Git commit: 6247962 Built: Sun Feb 10 04 :12:39 2019 OS/Arch: darwin/amd64 Experimental: false Server: Docker Engine - Community Engine: Version: 18 .09.2 API version: 1 .39 ( minimum version 1 .12 ) Go version: go1.10.6 Git commit: 6247962 Built: Sun Feb 10 04 :13:06 2019 OS/Arch: linux/amd64 Experimental: false nginx\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3055\u305b\u308b 1 docker run -d -p 80 :80 --name { \u30b3\u30f3\u30c6\u30ca\u540d } nginx nginx\u309280\u756a\u30dd\u30fc\u30c8\u3067\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u3002 docker image \u304c\u30ed\u30fc\u30ab\u30eb\u3067\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001Docker Hub\u304b\u3089pull\u3057\u3066\u304f\u308c\u308b\u3002 \u30b3\u30f3\u30c6\u30ca\u4e00\u89a7\u3092\u898b\u308b\u3068\u304d 1 docker container ls -a \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3068\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u306e\u30b3\u30f3\u30c6\u30ca\u4e00\u89a7\u3092\u898b\u308c\u308b \u30b3\u30f3\u30c6\u30ca\u3092\u6b62\u3081\u308b\u3068\u304d 1 docker container stop { \u30b3\u30f3\u30c6\u30ca\u540d } \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u3068\u304d 1 docker container start { \u30b3\u30f3\u30c6\u30ca\u540d } ` \u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b\u3068\u304d 1 docker container rm { \u30b3\u30f3\u30c6\u30ca\u540d } \u30a4\u30e1\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u3068\u304d 1 docker image rm { ID\u3082\u3057\u304f\u306f image name }","title":"Docker\u306b\u3064\u3044\u3066"},{"location":"docker/basic/#docker","text":"\u53c2\u8003:Qiita \u30b3\u30de\u30f3\u30c9\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8:Qiita","title":"Docker"},{"location":"docker/basic/#_1","text":"Mac: Docker for Mac docker version \u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u30a4\u30f3\u30b9\u30c8\u30fc\u30ebOK 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 $ docker version Client: Docker Engine - Community Version: 18 .09.2 API version: 1 .39 Go version: go1.10.8 Git commit: 6247962 Built: Sun Feb 10 04 :12:39 2019 OS/Arch: darwin/amd64 Experimental: false Server: Docker Engine - Community Engine: Version: 18 .09.2 API version: 1 .39 ( minimum version 1 .12 ) Go version: go1.10.6 Git commit: 6247962 Built: Sun Feb 10 04 :13:06 2019 OS/Arch: linux/amd64 Experimental: false","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"docker/basic/#nginx","text":"1 docker run -d -p 80 :80 --name { \u30b3\u30f3\u30c6\u30ca\u540d } nginx nginx\u309280\u756a\u30dd\u30fc\u30c8\u3067\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u3002 docker image \u304c\u30ed\u30fc\u30ab\u30eb\u3067\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001Docker Hub\u304b\u3089pull\u3057\u3066\u304f\u308c\u308b\u3002","title":"nginx\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3055\u305b\u308b"},{"location":"docker/basic/#_2","text":"1 docker container ls -a \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3068\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u306e\u30b3\u30f3\u30c6\u30ca\u4e00\u89a7\u3092\u898b\u308c\u308b","title":"\u30b3\u30f3\u30c6\u30ca\u4e00\u89a7\u3092\u898b\u308b\u3068\u304d"},{"location":"docker/basic/#_3","text":"1 docker container stop { \u30b3\u30f3\u30c6\u30ca\u540d }","title":"\u30b3\u30f3\u30c6\u30ca\u3092\u6b62\u3081\u308b\u3068\u304d"},{"location":"docker/basic/#_4","text":"1 docker container start { \u30b3\u30f3\u30c6\u30ca\u540d } `","title":"\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u3068\u304d"},{"location":"docker/basic/#_5","text":"1 docker container rm { \u30b3\u30f3\u30c6\u30ca\u540d }","title":"\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b\u3068\u304d"},{"location":"docker/basic/#_6","text":"1 docker image rm { ID\u3082\u3057\u304f\u306f image name }","title":"\u30a4\u30e1\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u3068\u304d"},{"location":"ruby/basic/","text":"Ruby\u306e\u57fa\u672c\u69cb\u6587 \u51fa\u529b 1 2 3 4 5 6 7 8 # \u6539\u884c\u306a\u3057 print 'hello world' # \u6539\u884c\u3042\u308a puts 'hello world' # \u30c7\u30d0\u30c3\u30b0\u7528(\u30c7\u30fc\u30bf\u306e\u578b\u306a\u3069\u304c\u308f\u304b\u308a\u3084\u3059\u3044) p 'hello world' \u30b3\u30e1\u30f3\u30c8 1 2 3 4 5 6 7 # 1\u884c\u30b3\u30e1\u30f3\u30c8 =begin \u8907\u6570\u884c \u8907\u6570\u884c \u8907\u6570\u884c =end \u5909\u6570 \u82f1\u5c0f\u6587\u5b57\u304b\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u5b9a\u7fa9\u3059\u308b([a-z]_) 1 2 aaaa = \"hey\" _aaa = \"hey\" \u5b9a\u6570 \u82f1\u5927\u6587\u5b57\u3067\u5b9a\u7fa9\u3059\u308b 1 AAA = \"hey\" !\u306b\u3064\u3044\u3066 \u7834\u58ca\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3068\u547c\u3070\u308c\u3066\u3044\u308b upcase ... \u6587\u5b57\u5217\u3092\u5927\u6587\u5b57\u306b\u3057\u305f\u3082\u306e\u3092\u8fd4\u3059\u3060\u3051 upcase! ... \u6587\u5b57\u5217\u3092\u5927\u6587\u5b57\u306b\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u3064\u3064\u3001\u3082\u3068\u306e\u6587\u5b57\u5217\u3082\u5927\u6587\u5b57\u306b\u3059\u308b 1 2 3 4 5 6 7 8 9 10 name = 'tarou' puts name . upcase # TAROU puts name # tarou puts name . upcase! # TAROU puts name # TAROU ?\u306b\u3064\u3044\u3066 \u771f\u507d\u5024\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9 1 2 p name . empty? # false p name . include? ( 'A' ) # true \u914d\u5217 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 colors = [ 'red' , 'blue' , 'green' , 'yellow' , 'purple' ] p colors [ 0 ] # \u6700\u521d\u304b\u3089 red p colors [- 1 ] # \u6700\u5f8c\u304b\u3089 purple p colors [ 0 .. 2 ] # 0~2\u306e\u5024\u3092\u8868\u793a [red, blue, green] p colors [ 0 ... 2 ] # 0~2\u306e\u76f4\u524d\u307e\u3067\u306e\u5024\u3092\u8868\u793a p colors [ 10 ] # \u7bc4\u56f2\u5916\u306e\u5834\u5408\u306f nil \u306b\u306a\u308b # \u5024\u306e\u66f8\u304d\u63db\u3048 colors [ 0 ] = 'change red' colors [ 1 .. 3 ] = [ 'change blue' , 'change_green' ] #\u5024\u306e\u8ffd\u52a0 colors . push ( 'white' ) #\u5024\u306e\u8ffd\u52a0(push\u3068\u540c\u3058\u51e6\u7406) colors << 'black' \u30cf\u30c3\u30b7\u30e5 1 2 3 4 5 6 7 # \u5168\u3066\u540c\u3058 # scores = {\"a\" => 100, \"b\" => 200} # scores = {:a => 100, :b => 200} scores = { a : 100 , b : 200 } # \u6271\u3044\u65b9\u306f\u914d\u5217\u3068\u307b\u307c\u540c\u3058 p scores [ :a ] \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5909\u63db\u306b\u3064\u3044\u3066 1 2 3 4 5 6 x = 100 y = '20' p x + y . to_i # integer\u306b\u5909\u63db p x + y . to_f # float\u306b\u5909\u63db p x . to_s + y # string\u306b\u5909\u63db \u30cf\u30c3\u30b7\u30e5\u3068\u914d\u5217\u306e\u76f8\u4e92\u5909\u63db\u306b\u3064\u3044\u3066 1 2 3 4 scores = { a : 20 , b : 50 } p scores . to_a # array\u306b\u5909\u63db p scores . to_a . to_h # hash\u306b\u5909\u63db %\u3092\u3064\u304b\u3063\u305f\u8a18\u6cd5 \u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u52d5\u4f5c 1 2 3 4 5 6 puts \"hello\" puts %Q(hello) puts %(hello) puts [ \"red\" , \"blue\" ] puts %W(red blue) \u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u52d5\u4f5c 1 2 3 4 5 puts 'hello' puts %q(hello) puts [ 'red' , 'blue' ] puts %w(red blue) \u7279\u6b8a\u6587\u5b57\u306b\u3064\u3044\u3066 \u6587\u5b57\u5217\u306b\u300c\"\u300d\u3092\u4f7f\u3044\u305f\u3044\u3068\u304d 1 %\u8a18\u6cd5\u306a\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u304b\u3051\u308b\u306e\u3067\u898b\u3084\u3059\u3044 1 2 3 puts %Q(he\"llo) puts %(he\"llo) puts %q(he'llo)","title":"Ruby\u306e\u57fa\u790e"},{"location":"ruby/basic/#ruby","text":"","title":"Ruby\u306e\u57fa\u672c\u69cb\u6587"},{"location":"ruby/basic/#_1","text":"1 2 3 4 5 6 7 8 # \u6539\u884c\u306a\u3057 print 'hello world' # \u6539\u884c\u3042\u308a puts 'hello world' # \u30c7\u30d0\u30c3\u30b0\u7528(\u30c7\u30fc\u30bf\u306e\u578b\u306a\u3069\u304c\u308f\u304b\u308a\u3084\u3059\u3044) p 'hello world'","title":"\u51fa\u529b"},{"location":"ruby/basic/#_2","text":"1 2 3 4 5 6 7 # 1\u884c\u30b3\u30e1\u30f3\u30c8 =begin \u8907\u6570\u884c \u8907\u6570\u884c \u8907\u6570\u884c =end","title":"\u30b3\u30e1\u30f3\u30c8"},{"location":"ruby/basic/#_3","text":"\u82f1\u5c0f\u6587\u5b57\u304b\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u5b9a\u7fa9\u3059\u308b([a-z]_) 1 2 aaaa = \"hey\" _aaa = \"hey\"","title":"\u5909\u6570"},{"location":"ruby/basic/#_4","text":"\u82f1\u5927\u6587\u5b57\u3067\u5b9a\u7fa9\u3059\u308b 1 AAA = \"hey\"","title":"\u5b9a\u6570"},{"location":"ruby/basic/#_5","text":"\u7834\u58ca\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3068\u547c\u3070\u308c\u3066\u3044\u308b upcase ... \u6587\u5b57\u5217\u3092\u5927\u6587\u5b57\u306b\u3057\u305f\u3082\u306e\u3092\u8fd4\u3059\u3060\u3051 upcase! ... \u6587\u5b57\u5217\u3092\u5927\u6587\u5b57\u306b\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u3064\u3064\u3001\u3082\u3068\u306e\u6587\u5b57\u5217\u3082\u5927\u6587\u5b57\u306b\u3059\u308b 1 2 3 4 5 6 7 8 9 10 name = 'tarou' puts name . upcase # TAROU puts name # tarou puts name . upcase! # TAROU puts name # TAROU","title":"!\u306b\u3064\u3044\u3066"},{"location":"ruby/basic/#_6","text":"\u771f\u507d\u5024\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9 1 2 p name . empty? # false p name . include? ( 'A' ) # true","title":"?\u306b\u3064\u3044\u3066"},{"location":"ruby/basic/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 colors = [ 'red' , 'blue' , 'green' , 'yellow' , 'purple' ] p colors [ 0 ] # \u6700\u521d\u304b\u3089 red p colors [- 1 ] # \u6700\u5f8c\u304b\u3089 purple p colors [ 0 .. 2 ] # 0~2\u306e\u5024\u3092\u8868\u793a [red, blue, green] p colors [ 0 ... 2 ] # 0~2\u306e\u76f4\u524d\u307e\u3067\u306e\u5024\u3092\u8868\u793a p colors [ 10 ] # \u7bc4\u56f2\u5916\u306e\u5834\u5408\u306f nil \u306b\u306a\u308b # \u5024\u306e\u66f8\u304d\u63db\u3048 colors [ 0 ] = 'change red' colors [ 1 .. 3 ] = [ 'change blue' , 'change_green' ] #\u5024\u306e\u8ffd\u52a0 colors . push ( 'white' ) #\u5024\u306e\u8ffd\u52a0(push\u3068\u540c\u3058\u51e6\u7406) colors << 'black'","title":"\u914d\u5217"},{"location":"ruby/basic/#_8","text":"1 2 3 4 5 6 7 # \u5168\u3066\u540c\u3058 # scores = {\"a\" => 100, \"b\" => 200} # scores = {:a => 100, :b => 200} scores = { a : 100 , b : 200 } # \u6271\u3044\u65b9\u306f\u914d\u5217\u3068\u307b\u307c\u540c\u3058 p scores [ :a ]","title":"\u30cf\u30c3\u30b7\u30e5"},{"location":"ruby/basic/#_9","text":"1 2 3 4 5 6 x = 100 y = '20' p x + y . to_i # integer\u306b\u5909\u63db p x + y . to_f # float\u306b\u5909\u63db p x . to_s + y # string\u306b\u5909\u63db","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5909\u63db\u306b\u3064\u3044\u3066"},{"location":"ruby/basic/#_10","text":"1 2 3 4 scores = { a : 20 , b : 50 } p scores . to_a # array\u306b\u5909\u63db p scores . to_a . to_h # hash\u306b\u5909\u63db","title":"\u30cf\u30c3\u30b7\u30e5\u3068\u914d\u5217\u306e\u76f8\u4e92\u5909\u63db\u306b\u3064\u3044\u3066"},{"location":"ruby/basic/#_11","text":"\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u52d5\u4f5c 1 2 3 4 5 6 puts \"hello\" puts %Q(hello) puts %(hello) puts [ \"red\" , \"blue\" ] puts %W(red blue) \u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u52d5\u4f5c 1 2 3 4 5 puts 'hello' puts %q(hello) puts [ 'red' , 'blue' ] puts %w(red blue)","title":"%\u3092\u3064\u304b\u3063\u305f\u8a18\u6cd5"},{"location":"ruby/basic/#_12","text":"\u6587\u5b57\u5217\u306b\u300c\"\u300d\u3092\u4f7f\u3044\u305f\u3044\u3068\u304d 1 %\u8a18\u6cd5\u306a\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u304b\u3051\u308b\u306e\u3067\u898b\u3084\u3059\u3044 1 2 3 puts %Q(he\"llo) puts %(he\"llo) puts %q(he'llo)","title":"\u7279\u6b8a\u6587\u5b57\u306b\u3064\u3044\u3066"},{"location":"ruby/gem/","text":"Gem\u306b\u3064\u3044\u3066 \u53c2\u8003\uff1a Qiita - Bundler\u3067gem\u3092\u5b9f\u7528\u7684\u306b\u6271\u3046\u305f\u3081\u306e\u307e\u3068\u3081 \u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u306e\u5927\u307e\u304b\u306a\u610f\u5473\u5408\u3044 PATCH 0.0.x API\u306e\u5909\u66f4\u306e\u306a\u3044\u5b9f\u88c5\u30ec\u30d9\u30eb\u306e\u4fee\u6b63\u3002\u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9\u7b49\u3002 MINOR 0.x.0 \u5f8c\u65b9\u4e92\u63db\u6027\u3092\u3082\u3063\u305fAPI\u306e\u5909\u66f4\u306a\u3069\u3002\u65b0\u6a5f\u80fd\u3001\u65b0API\u306e\u5b9f\u88c5\u7b49\u3002 MAJOR x.0.0 \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3068\u30e6\u30fc\u30b6\u30fc\u306e\u5b9f\u88c5\u304c\u52d5\u304b\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u5f8c\u65b9\u4e92\u63db\u6027\u306e\u306a\u3044\u5909\u66f4\u3092\u542b\u3080\u5834\u5408\u3002 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308bgem\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a 1 2 3 4 5 6 7 8 9 10 11 12 13 \u76f4\u63a5\u6307\u5b9a gem 'example' , '1.2.3' # 1 . 2 . 3 \u306e\u307f\u3092\u3064\u304b\u3046 \u8d85\u904e / \u672a\u6e80 gem 'example' , '> 1.2' # 1 . 2 \u3092\u8d85\u904e gem 'example' , '< 1.2' # 1 . 2 \u672a\u6e80 \u4ee5\u4e0a / \u4ee5\u4e0b gem 'example' , '>= 1.2' # 1 . 2 \u4ee5\u4e0a gem 'example' , '<= 1.2' # 1 . 2 \u4ee5\u4e0b \u3088\u304f\u4f7f\u308f\u308c\u308b\u3061\u3087\u3063\u3068\u7279\u6b8a\u306a\u3084\u3064 gem 'example' , '~> 1.2' # 1 . 2 \u4ee5\u4e0a\u304b\u3064 2 . 0 \u672a\u6e80","title":"Gem\u306b\u3064\u3044\u3066"},{"location":"ruby/gem/#gem","text":"\u53c2\u8003\uff1a Qiita - Bundler\u3067gem\u3092\u5b9f\u7528\u7684\u306b\u6271\u3046\u305f\u3081\u306e\u307e\u3068\u3081","title":"Gem\u306b\u3064\u3044\u3066"},{"location":"ruby/gem/#_1","text":"PATCH 0.0.x API\u306e\u5909\u66f4\u306e\u306a\u3044\u5b9f\u88c5\u30ec\u30d9\u30eb\u306e\u4fee\u6b63\u3002\u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9\u7b49\u3002 MINOR 0.x.0 \u5f8c\u65b9\u4e92\u63db\u6027\u3092\u3082\u3063\u305fAPI\u306e\u5909\u66f4\u306a\u3069\u3002\u65b0\u6a5f\u80fd\u3001\u65b0API\u306e\u5b9f\u88c5\u7b49\u3002 MAJOR x.0.0 \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3068\u30e6\u30fc\u30b6\u30fc\u306e\u5b9f\u88c5\u304c\u52d5\u304b\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u5f8c\u65b9\u4e92\u63db\u6027\u306e\u306a\u3044\u5909\u66f4\u3092\u542b\u3080\u5834\u5408\u3002","title":"\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u306e\u5927\u307e\u304b\u306a\u610f\u5473\u5408\u3044"},{"location":"ruby/gem/#gem_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 \u76f4\u63a5\u6307\u5b9a gem 'example' , '1.2.3' # 1 . 2 . 3 \u306e\u307f\u3092\u3064\u304b\u3046 \u8d85\u904e / \u672a\u6e80 gem 'example' , '> 1.2' # 1 . 2 \u3092\u8d85\u904e gem 'example' , '< 1.2' # 1 . 2 \u672a\u6e80 \u4ee5\u4e0a / \u4ee5\u4e0b gem 'example' , '>= 1.2' # 1 . 2 \u4ee5\u4e0a gem 'example' , '<= 1.2' # 1 . 2 \u4ee5\u4e0b \u3088\u304f\u4f7f\u308f\u308c\u308b\u3061\u3087\u3063\u3068\u7279\u6b8a\u306a\u3084\u3064 gem 'example' , '~> 1.2' # 1 . 2 \u4ee5\u4e0a\u304b\u3064 2 . 0 \u672a\u6e80","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308bgem\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a"},{"location":"ruby/rspec_basic/","text":"RSpec\u306e\u57fa\u672c\u7684\u306a\u69cb\u6587\u3084\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u7406\u89e3\u3059\u308b \u53c2\u8003\uff1ahttps://qiita.com/jnchito/items/42193d066bd61c740612 describe / it / expect \u306e\u5f79\u5272\u3092\u7406\u89e3\u3059\u308b 1 2 3 4 5 describe '\u56db\u5247\u6f14\u7b97' do it '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end end describe describe \u306f\u30c6\u30b9\u30c8\u306e\u30b0\u30eb\u30fc\u30d7\u5316\u3092\u5ba3\u8a00\u3059\u308b\u3002 \u65e5\u672c\u8a9e\u306b\u3059\u308b\u3068\u3001\u300c\uff5e\u3092\u8ff0\u3079\u308b\u300d\u300c\uff5e\u3092\u8aac\u660e\u3059\u308b\u300d\u300c\uff5e\u3092\u8a18\u8ff0\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u3002 describe '\u56db\u5247\u6f14\u7b97' \u306e\u6587\u5b57\u5217\u306e\u90e8\u5206\u306f\u305d\u308c\u3060\u3051\u3067\u306a\u304f describe User \u306e\u3088\u3046\u306b\u30af\u30e9\u30b9\u3082\u6e21\u305b\u308b\u3002 it it \u306f\u30c6\u30b9\u30c8\u3092 example \u3068\u3044\u3046\u5358\u4f4d\u306b\u307e\u3068\u3081\u308b\u5f79\u5272\u3092\u3057\u307e\u3059\u3002 it do ... end \u306e\u4e2d\u306e\u30a8\u30af\u30b9\u30da\u30af\u30c6\u30fc\u30b7\u30e7\u30f3\uff08\u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u306e\u6bd4\u8f03\uff09\u304c\u3059\u3079\u3066\u30d1\u30b9\u3059\u308c\u3070\u3001\u305d\u306e example \u306f\u30d1\u30b9\u3057\u305f\u3053\u3068\u306b\u306a\u308b\u3002 expect expect(X).to eq Y \u3067\u8a18\u8ff0\u3059\u308b\u306e\u304c\u30a8\u30af\u30b9\u30da\u30af\u30c6\u30fc\u30b7\u30e7\u30f3\u3002 expect \u306b\u306f\u300c\u671f\u5f85\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u304c\u3042\u308a\u3001 expect(X).to eq Y \u306f\u300cX\u304cY\u306b\u7b49\u3057\u304f\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u300d\u3068\u8aad\u3081\u307e\u3059\u3002 \u3088\u3063\u3066\u3001 expect(1 + 1).to eq 2 \u306f\u300c1 + 1 \u304c 2 \u306b\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u300d\u30c6\u30b9\u30c8\u306b\u306a\u308b\u3002 context \u3068 before \u3067\u3082\u3046\u5c11\u3057\u4fbf\u5229\u306b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 describe User do describe '#greet' do before do @params = { name : '\u305f\u308d\u3046' } end context '12\u6b73\u4ee5\u4e0b\u306e\u5834\u5408' do it '\u3072\u3089\u304c\u306a\u3067\u7b54\u3048\u308b\u3053\u3068' do user = User . new ( @params . merge ( age : 12 )) expect ( user . greet ) . to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' end end context '13\u6b73\u4ee5\u4e0a\u306e\u5834\u5408' do it '\u6f22\u5b57\u3067\u7b54\u3048\u308b\u3053\u3068' do user = User . new ( @params . merge ( age : 13 )) expect ( user . greet ) . to eq '\u50d5\u306f\u305f\u308d\u3046\u3067\u3059\u3002' end end end end context describe \u4ee5\u5916\u306b\u3082 context \u3068\u3044\u3046\u6a5f\u80fd\u3067\u30c6\u30b9\u30c8\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u3069\u3061\u3089\u3082\u6a5f\u80fd\u7684\u306b\u306f\u540c\u3058\u3060\u304c\u3001 context \u306f\u6761\u4ef6\u3092\u5206\u3051\u305f\u308a\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u3002 \u65e5\u672c\u8a9e\u3067\u300c\u6587\u8108\u300d\u3084\u300c\u72b6\u6cc1\u300d\u306e\u610f\u5473\u3002 before before do ... end \u3067\u56f2\u307e\u308c\u305f\u90e8\u5206\u306f example \u306e\u5b9f\u884c\u524d\u306b\u6bce\u56de\u547c\u3070\u308c\u308b\u3002 before \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u524d\u306e\u5171\u901a\u51e6\u7406\u3084\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u7b49\u3092\u884c\u3046\u3053\u3068\u304c\u591a\u3044\u3002 describe \u3084 context \u304c\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u89aa\u5b50\u95a2\u4fc2\u306b\u5fdc\u3058\u3066 before \u304c\u9806\u756a\u306b\u547c\u3070\u308c\u308b\u3002(\u89aa\u2192\u5b50\u306e\u9806\u756a) \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u304b\u308f\u308a\u306b let \u3092\u4f7f\u3046 let\u306e\u5229\u70b9\u306b\u3064\u3044\u3066\uff1ahttps://qiita.com/jnchito/items/cdd9eef2ed193267c651 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 describe User do describe '#greet' do let ( :user ) { User . new ( params ) } let ( :params ) { { name : '\u305f\u308d\u3046' , age : age } } context '12\u6b73\u4ee5\u4e0b\u306e\u5834\u5408' do let ( :age ) { 12 } it '\u3072\u3089\u304c\u306a\u3067\u7b54\u3048\u308b\u3053\u3068' do expect ( user . greet ) . to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' end end context '13\u6b73\u4ee5\u4e0a\u306e\u5834\u5408' do let ( :age ) { 13 } it '\u6f22\u5b57\u3067\u7b54\u3048\u308b\u3053\u3068' do expect ( user . greet ) . to eq '\u50d5\u306f\u305f\u308d\u3046\u3067\u3059\u3002' end end end end let(:foo) { ... } \u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001 { ... } \u306e\u4e2d\u306e\u5024\u304c foo \u3068\u3057\u3066\u53c2\u7167\u3067\u304d\u308b\u3002 let \u306f\u300cbefore + \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u300d\u3092\u4f7f\u3046\u3068\u304d\u3068\u306f\u7570\u306a\u308a\u3001 \u9045\u5ef6\u8a55\u4fa1\u3055\u308c\u308b \u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308b\u3002 \u3059\u306a\u308f\u3061\u3001 let \u306f\u5fc5\u8981\u306b\u306a\u308b\u77ac\u9593\u307e\u3067\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\u3002 subject \u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30921\u7b87\u6240\u306b\u307e\u3068\u3081\u308b \u65e5\u672c\u8a9e\u3067\u300c\u4e3b\u8a9e\u300d\u3084\u300c\u5bfe\u8c61\u300d\u3068\u3044\u3046\u610f\u5473\u3002 \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u307e\u305f\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\uff09\u304c\u660e\u78ba\u306b\u4e00\u3064\u306b\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001 subject \u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u7dba\u9e97\u306b\u306a\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 describe User do describe '#greet' do let ( :user ) { User . new ( params ) } let ( :params ) { { name : '\u305f\u308d\u3046' , age : age } } subject { user . greet } context '12\u6b73\u4ee5\u4e0b\u306e\u5834\u5408' do let ( :age ) { 12 } it '\u3072\u3089\u304c\u306a\u3067\u7b54\u3048\u308b\u3053\u3068' do is_expected . to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' end end context '13\u6b73\u4ee5\u4e0a\u306e\u5834\u5408' do let ( :age ) { 13 } it { is_expected . to eq '\u50d5\u306f\u305f\u308d\u3046\u3067\u3059\u3002' } # it\u3092\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b end end end \u4eca\u307e\u3067 expect(user.greet).to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' \u3068\u66f8\u3044\u3066\u3044\u305f\u90e8\u5206\u304c is_expected.to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' \u3068\u7c21\u6f54\u306b\u3067\u304d\u308b\u3002 it \u306e\u30a8\u30a4\u30ea\u30a2\u30b9 \uff1d example \u3068 specify RSpec\u306b\u306f it \u306e\u4ed6\u306b\u5168\u304f\u540c\u3058\u5f79\u5272\u306e example \u3068 specify \u304c\u3042\u308b\u3002 \u3053\u308c\u30893\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u95a2\u4fc2\u306b\u3042\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u5185\u90e8\u7684\u306b\u306f\u5168\u304f\u540c\u3058\u610f\u5473\u306b\u306a\u308b\u3002 \u306a\u305c3\u7a2e\u985e\u3082\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u81ea\u7136\u306a\u82f1\u6587\u3092\u4f5c\u308b\u305f\u3081\u3002 \u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u5834\u5408\u306f\u4f7f\u3044\u5206\u3051\u305b\u305a\u306b it \u3067\u7d71\u4e00\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3002 1 2 3 4 5 6 7 8 9 10 11 it '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end specify '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end example '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end","title":"Rspec\u306e\u57fa\u672c"},{"location":"ruby/rspec_basic/#rspec","text":"\u53c2\u8003\uff1ahttps://qiita.com/jnchito/items/42193d066bd61c740612","title":"RSpec\u306e\u57fa\u672c\u7684\u306a\u69cb\u6587\u3084\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u7406\u89e3\u3059\u308b"},{"location":"ruby/rspec_basic/#describe-it-expect","text":"1 2 3 4 5 describe '\u56db\u5247\u6f14\u7b97' do it '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end end","title":"describe / it / expect \u306e\u5f79\u5272\u3092\u7406\u89e3\u3059\u308b"},{"location":"ruby/rspec_basic/#describe","text":"describe \u306f\u30c6\u30b9\u30c8\u306e\u30b0\u30eb\u30fc\u30d7\u5316\u3092\u5ba3\u8a00\u3059\u308b\u3002 \u65e5\u672c\u8a9e\u306b\u3059\u308b\u3068\u3001\u300c\uff5e\u3092\u8ff0\u3079\u308b\u300d\u300c\uff5e\u3092\u8aac\u660e\u3059\u308b\u300d\u300c\uff5e\u3092\u8a18\u8ff0\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u3002 describe '\u56db\u5247\u6f14\u7b97' \u306e\u6587\u5b57\u5217\u306e\u90e8\u5206\u306f\u305d\u308c\u3060\u3051\u3067\u306a\u304f describe User \u306e\u3088\u3046\u306b\u30af\u30e9\u30b9\u3082\u6e21\u305b\u308b\u3002","title":"describe"},{"location":"ruby/rspec_basic/#it","text":"it \u306f\u30c6\u30b9\u30c8\u3092 example \u3068\u3044\u3046\u5358\u4f4d\u306b\u307e\u3068\u3081\u308b\u5f79\u5272\u3092\u3057\u307e\u3059\u3002 it do ... end \u306e\u4e2d\u306e\u30a8\u30af\u30b9\u30da\u30af\u30c6\u30fc\u30b7\u30e7\u30f3\uff08\u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u306e\u6bd4\u8f03\uff09\u304c\u3059\u3079\u3066\u30d1\u30b9\u3059\u308c\u3070\u3001\u305d\u306e example \u306f\u30d1\u30b9\u3057\u305f\u3053\u3068\u306b\u306a\u308b\u3002","title":"it"},{"location":"ruby/rspec_basic/#expect","text":"expect(X).to eq Y \u3067\u8a18\u8ff0\u3059\u308b\u306e\u304c\u30a8\u30af\u30b9\u30da\u30af\u30c6\u30fc\u30b7\u30e7\u30f3\u3002 expect \u306b\u306f\u300c\u671f\u5f85\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u304c\u3042\u308a\u3001 expect(X).to eq Y \u306f\u300cX\u304cY\u306b\u7b49\u3057\u304f\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u300d\u3068\u8aad\u3081\u307e\u3059\u3002 \u3088\u3063\u3066\u3001 expect(1 + 1).to eq 2 \u306f\u300c1 + 1 \u304c 2 \u306b\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u300d\u30c6\u30b9\u30c8\u306b\u306a\u308b\u3002","title":"expect"},{"location":"ruby/rspec_basic/#context-before","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 describe User do describe '#greet' do before do @params = { name : '\u305f\u308d\u3046' } end context '12\u6b73\u4ee5\u4e0b\u306e\u5834\u5408' do it '\u3072\u3089\u304c\u306a\u3067\u7b54\u3048\u308b\u3053\u3068' do user = User . new ( @params . merge ( age : 12 )) expect ( user . greet ) . to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' end end context '13\u6b73\u4ee5\u4e0a\u306e\u5834\u5408' do it '\u6f22\u5b57\u3067\u7b54\u3048\u308b\u3053\u3068' do user = User . new ( @params . merge ( age : 13 )) expect ( user . greet ) . to eq '\u50d5\u306f\u305f\u308d\u3046\u3067\u3059\u3002' end end end end","title":"context \u3068 before \u3067\u3082\u3046\u5c11\u3057\u4fbf\u5229\u306b"},{"location":"ruby/rspec_basic/#context","text":"describe \u4ee5\u5916\u306b\u3082 context \u3068\u3044\u3046\u6a5f\u80fd\u3067\u30c6\u30b9\u30c8\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u3069\u3061\u3089\u3082\u6a5f\u80fd\u7684\u306b\u306f\u540c\u3058\u3060\u304c\u3001 context \u306f\u6761\u4ef6\u3092\u5206\u3051\u305f\u308a\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u3002 \u65e5\u672c\u8a9e\u3067\u300c\u6587\u8108\u300d\u3084\u300c\u72b6\u6cc1\u300d\u306e\u610f\u5473\u3002","title":"context"},{"location":"ruby/rspec_basic/#before","text":"before do ... end \u3067\u56f2\u307e\u308c\u305f\u90e8\u5206\u306f example \u306e\u5b9f\u884c\u524d\u306b\u6bce\u56de\u547c\u3070\u308c\u308b\u3002 before \u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u524d\u306e\u5171\u901a\u51e6\u7406\u3084\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u7b49\u3092\u884c\u3046\u3053\u3068\u304c\u591a\u3044\u3002 describe \u3084 context \u304c\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u89aa\u5b50\u95a2\u4fc2\u306b\u5fdc\u3058\u3066 before \u304c\u9806\u756a\u306b\u547c\u3070\u308c\u308b\u3002(\u89aa\u2192\u5b50\u306e\u9806\u756a)","title":"before"},{"location":"ruby/rspec_basic/#let","text":"let\u306e\u5229\u70b9\u306b\u3064\u3044\u3066\uff1ahttps://qiita.com/jnchito/items/cdd9eef2ed193267c651 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 describe User do describe '#greet' do let ( :user ) { User . new ( params ) } let ( :params ) { { name : '\u305f\u308d\u3046' , age : age } } context '12\u6b73\u4ee5\u4e0b\u306e\u5834\u5408' do let ( :age ) { 12 } it '\u3072\u3089\u304c\u306a\u3067\u7b54\u3048\u308b\u3053\u3068' do expect ( user . greet ) . to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' end end context '13\u6b73\u4ee5\u4e0a\u306e\u5834\u5408' do let ( :age ) { 13 } it '\u6f22\u5b57\u3067\u7b54\u3048\u308b\u3053\u3068' do expect ( user . greet ) . to eq '\u50d5\u306f\u305f\u308d\u3046\u3067\u3059\u3002' end end end end let(:foo) { ... } \u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001 { ... } \u306e\u4e2d\u306e\u5024\u304c foo \u3068\u3057\u3066\u53c2\u7167\u3067\u304d\u308b\u3002 let \u306f\u300cbefore + \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u300d\u3092\u4f7f\u3046\u3068\u304d\u3068\u306f\u7570\u306a\u308a\u3001 \u9045\u5ef6\u8a55\u4fa1\u3055\u308c\u308b \u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308b\u3002 \u3059\u306a\u308f\u3061\u3001 let \u306f\u5fc5\u8981\u306b\u306a\u308b\u77ac\u9593\u307e\u3067\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\u3002","title":"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u304b\u308f\u308a\u306b let \u3092\u4f7f\u3046"},{"location":"ruby/rspec_basic/#subject-1","text":"\u65e5\u672c\u8a9e\u3067\u300c\u4e3b\u8a9e\u300d\u3084\u300c\u5bfe\u8c61\u300d\u3068\u3044\u3046\u610f\u5473\u3002 \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u307e\u305f\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\uff09\u304c\u660e\u78ba\u306b\u4e00\u3064\u306b\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001 subject \u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u7dba\u9e97\u306b\u306a\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 describe User do describe '#greet' do let ( :user ) { User . new ( params ) } let ( :params ) { { name : '\u305f\u308d\u3046' , age : age } } subject { user . greet } context '12\u6b73\u4ee5\u4e0b\u306e\u5834\u5408' do let ( :age ) { 12 } it '\u3072\u3089\u304c\u306a\u3067\u7b54\u3048\u308b\u3053\u3068' do is_expected . to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' end end context '13\u6b73\u4ee5\u4e0a\u306e\u5834\u5408' do let ( :age ) { 13 } it { is_expected . to eq '\u50d5\u306f\u305f\u308d\u3046\u3067\u3059\u3002' } # it\u3092\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b end end end \u4eca\u307e\u3067 expect(user.greet).to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' \u3068\u66f8\u3044\u3066\u3044\u305f\u90e8\u5206\u304c is_expected.to eq '\u307c\u304f\u306f\u305f\u308d\u3046\u3060\u3088\u3002' \u3068\u7c21\u6f54\u306b\u3067\u304d\u308b\u3002","title":"subject \u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30921\u7b87\u6240\u306b\u307e\u3068\u3081\u308b"},{"location":"ruby/rspec_basic/#it-example-specify","text":"RSpec\u306b\u306f it \u306e\u4ed6\u306b\u5168\u304f\u540c\u3058\u5f79\u5272\u306e example \u3068 specify \u304c\u3042\u308b\u3002 \u3053\u308c\u30893\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u95a2\u4fc2\u306b\u3042\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u5185\u90e8\u7684\u306b\u306f\u5168\u304f\u540c\u3058\u610f\u5473\u306b\u306a\u308b\u3002 \u306a\u305c3\u7a2e\u985e\u3082\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u81ea\u7136\u306a\u82f1\u6587\u3092\u4f5c\u308b\u305f\u3081\u3002 \u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u5834\u5408\u306f\u4f7f\u3044\u5206\u3051\u305b\u305a\u306b it \u3067\u7d71\u4e00\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3002 1 2 3 4 5 6 7 8 9 10 11 it '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end specify '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end example '1 + 1 \u306f 2 \u306b\u306a\u308b\u3053\u3068' do expect ( 1 + 1 ) . to eq 2 end","title":"it \u306e\u30a8\u30a4\u30ea\u30a2\u30b9 \uff1d example \u3068 specify"},{"location":"ruby/rspec_matcher/","text":"RSpec\u306e\u30de\u30c3\u30c1\u30e3\u306b\u3064\u3044\u3066 \u53c2\u8003\uff1ahttps://qiita.com/jnchito/items/2e79a1abe7cd8214caa5 \u30de\u30c3\u30c1\u30e3(matcher)\u3068\u306f \u30de\u30c3\u30c1\u30e3\uff08matcher\uff09\u306f\u300c\u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u3092\u6bd4\u8f03\u3057\u3066\u3001\u4e00\u81f4\u3057\u305f\uff08\u3082\u3057\u304f\u306f\u4e00\u81f4\u3057\u306a\u304b\u3063\u305f\uff09\u3068\u3044\u3046\u7d50\u679c\u3092\u8fd4\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u306e\u3053\u3068\u3002 1 2 expect ( 1 + 2 ) . to eq 3 expect ( [ 1 , 2 , 3 ] ) . to include 2 eq \u3084 include \u304c\u30de\u30c3\u30c1\u30e3\u306b\u3042\u305f\u308a\u307e\u3059\u3002 \u30de\u30c3\u30c1\u30e3\u306f\u81ea\u5206\u81ea\u8eab\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u691c\u8a3c\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u3001\u5b9f\u969b\u306e\u5024\uff081 + 2 \u3084 [1, 2, 3]\uff09\u3068\u671f\u5f85\u5024\uff083 \u3084 2\uff09\u3092\u6bd4\u8f03\u3057\u3001\u30eb\u30fc\u30eb\u306b\u5408\u81f4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u3002 to / not_to / to_not \u300c\uff5e\u3067\u3042\u308b\u3053\u3068\u300d\u3092\u671f\u5f85\u3059\u308b\u5834\u5408\u306f to \u3092\u4f7f\u3046\u3002 1 expect ( 1 + 2 ) . to eq 3 \u53cd\u5bfe\u306b\u300c\uff5e\u3067\u306f\u306a\u3044\u3053\u3068\u300d\u3092\u671f\u5f85\u3059\u308b\u5834\u5408\u306f not_to \u3082\u3057\u304f\u306f to_not \u3092\u4f7f\u3046\u3002 \u82f1\u8a9e\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u3068\u304d\u306b\u8aad\u307f\u3084\u3059\u3044\u65b9\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u3001\u65e5\u672c\u8a9e\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u3068\u304d\u306f not_to \u306a\u3069\u306b\u7d71\u4e00\u3059\u308b\u3068\u3088\u3044\u3002 1 2 3 expect ( 1 + 2 ) . not_to eq 1 # \u307e\u305f\u306f expect ( 1 + 2 ) . to_not eq 1 to \u3084 not_to \u81ea\u4f53\u306f\u30de\u30c3\u30c1\u30e3\u3067\u306f\u306a\u3044\u3002 to \u3084 not_to \u306f\u30de\u30c3\u30c1\u30e3\u306e\u5b9f\u884c\u7d50\u679c\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u30c6\u30b9\u30c8\u3092\u30d1\u30b9\u3055\u305b\u308b\u304b\u5426\u304b\u3092\u5224\u65ad\u3059\u308bRSpec\u306e\u30e1\u30bd\u30c3\u30c9\u3002 eq \u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u304c\u300c\u7b49\u3057\u3044\u300d\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3059\u308b\u5834\u5408\u306f eq \u3092\u4f7f\u3046\u3002 1 expect ( 1 + 2 ) . to eq 3 be be \u306f\u7b49\u53f7\u30fb\u4e0d\u7b49\u53f7\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u5024\u306e\u5927\u5c0f\u3092\u691c\u8a3c\u3059\u308b\u3068\u304d\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u30de\u30c3\u30c1\u30e3\u3002 1 expect ( 1 + 2 ) . to be >= 3 be_xxx (predicate\u30de\u30c3\u30c1\u30e3)","title":"Rspec\u306e\u30de\u30c3\u30c1\u30e3\u30fc\u306b\u3064\u3044\u3066"},{"location":"ruby/rspec_matcher/#rspec","text":"\u53c2\u8003\uff1ahttps://qiita.com/jnchito/items/2e79a1abe7cd8214caa5","title":"RSpec\u306e\u30de\u30c3\u30c1\u30e3\u306b\u3064\u3044\u3066"},{"location":"ruby/rspec_matcher/#matcher","text":"\u30de\u30c3\u30c1\u30e3\uff08matcher\uff09\u306f\u300c\u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u3092\u6bd4\u8f03\u3057\u3066\u3001\u4e00\u81f4\u3057\u305f\uff08\u3082\u3057\u304f\u306f\u4e00\u81f4\u3057\u306a\u304b\u3063\u305f\uff09\u3068\u3044\u3046\u7d50\u679c\u3092\u8fd4\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u306e\u3053\u3068\u3002 1 2 expect ( 1 + 2 ) . to eq 3 expect ( [ 1 , 2 , 3 ] ) . to include 2 eq \u3084 include \u304c\u30de\u30c3\u30c1\u30e3\u306b\u3042\u305f\u308a\u307e\u3059\u3002 \u30de\u30c3\u30c1\u30e3\u306f\u81ea\u5206\u81ea\u8eab\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u691c\u8a3c\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u3001\u5b9f\u969b\u306e\u5024\uff081 + 2 \u3084 [1, 2, 3]\uff09\u3068\u671f\u5f85\u5024\uff083 \u3084 2\uff09\u3092\u6bd4\u8f03\u3057\u3001\u30eb\u30fc\u30eb\u306b\u5408\u81f4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u3002","title":"\u30de\u30c3\u30c1\u30e3(matcher)\u3068\u306f"},{"location":"ruby/rspec_matcher/#to-not_to-to_not","text":"\u300c\uff5e\u3067\u3042\u308b\u3053\u3068\u300d\u3092\u671f\u5f85\u3059\u308b\u5834\u5408\u306f to \u3092\u4f7f\u3046\u3002 1 expect ( 1 + 2 ) . to eq 3 \u53cd\u5bfe\u306b\u300c\uff5e\u3067\u306f\u306a\u3044\u3053\u3068\u300d\u3092\u671f\u5f85\u3059\u308b\u5834\u5408\u306f not_to \u3082\u3057\u304f\u306f to_not \u3092\u4f7f\u3046\u3002 \u82f1\u8a9e\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u3068\u304d\u306b\u8aad\u307f\u3084\u3059\u3044\u65b9\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u3001\u65e5\u672c\u8a9e\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u3068\u304d\u306f not_to \u306a\u3069\u306b\u7d71\u4e00\u3059\u308b\u3068\u3088\u3044\u3002 1 2 3 expect ( 1 + 2 ) . not_to eq 1 # \u307e\u305f\u306f expect ( 1 + 2 ) . to_not eq 1 to \u3084 not_to \u81ea\u4f53\u306f\u30de\u30c3\u30c1\u30e3\u3067\u306f\u306a\u3044\u3002 to \u3084 not_to \u306f\u30de\u30c3\u30c1\u30e3\u306e\u5b9f\u884c\u7d50\u679c\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u30c6\u30b9\u30c8\u3092\u30d1\u30b9\u3055\u305b\u308b\u304b\u5426\u304b\u3092\u5224\u65ad\u3059\u308bRSpec\u306e\u30e1\u30bd\u30c3\u30c9\u3002","title":"to / not_to / to_not"},{"location":"ruby/rspec_matcher/#eq","text":"\u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u304c\u300c\u7b49\u3057\u3044\u300d\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3059\u308b\u5834\u5408\u306f eq \u3092\u4f7f\u3046\u3002 1 expect ( 1 + 2 ) . to eq 3","title":"eq"},{"location":"ruby/rspec_matcher/#be","text":"be \u306f\u7b49\u53f7\u30fb\u4e0d\u7b49\u53f7\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u5024\u306e\u5927\u5c0f\u3092\u691c\u8a3c\u3059\u308b\u3068\u304d\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u30de\u30c3\u30c1\u30e3\u3002 1 expect ( 1 + 2 ) . to be >= 3","title":"be"},{"location":"ruby/rspec_matcher/#be_xxx-predicate","text":"","title":"be_xxx (predicate\u30de\u30c3\u30c1\u30e3)"},{"location":"swift/basic1/","text":"Swift\u306e\u57fa\u790e1 \u5909\u6570 \u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5909\u6570\u300clet\u300d \u66f8\u304d\u63db\u3048\u3089\u308c\u3093\u3088 1 2 let immutableStr = \"hello\" immutableStr += \" world\" // error \u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5909\u6570\u300cvar\u300d \u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u3088 1 2 var mutableStr = \"hello\" mutableStr += \" world\" // ok \u578b\u63a8\u8ad6 \u660e\u793a\u7684\u306b\u578b\u3092\u5ba3\u8a00\u3057\u306a\u3044\u5834\u5408\u306f\u578b\u63a8\u8ad6\u306b\u306a\u308b 1 2 var str = \"string\" var int = 100 \u578b\u5ba3\u8a00 1 var mutableStr : String = \"string\" \u578b\u306e\u6697\u9ed9\u5909\u63db \u578b\u306e\u6697\u9ed9\u5909\u63db\u306f\u3055\u308c\u306a\u3044\u306e\u3067\u5909\u63db\u3057\u3066\u3042\u3052\u308b 1 2 3 let label = \"This year is \" let year = 2019 let thisYear = label + String ( 2017 ) \u6587\u5b57\u5217\u5185\u3067\u306e\u5909\u6570\u5c55\u958b 1 2 let year = 2019 let nextYear = \"Next year is \\( year + 1 ) \" \u914d\u5217 1 2 3 4 var itemsArray = [ \"foo\" , \"bar\" , \"baz\" ] // \u578b\u5ba3\u8a00\u3059\u308b\u5834\u5408 var itemsArray : [ String ] = [ \"foo\" , \"bar\" , \"baz\" ] \u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\uff08Dictionary\u578b\uff09 [\"\u30ad\u30fc\": \"\u5024\"]\u306e\u3088\u3046\u306b\u8a18\u3057\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 var itemsDictionary = [ \"foo\" : \"FOO\" , \"bar\" : \"BAR\" , \"baz\" : \"BAZ\" ] // \u578b\u5ba3\u8a00\u3059\u308b\u5834\u5408 var itemsDictionary : [ String : String ] = [ \"foo\" : \"FOO\" , \"bar\" : \"BAR\" , \"baz\" : \"BAZ\" ] \u5f0f if else 1 2 3 4 5 if true == true { print ( \"true\" ) } else { print ( \"false\" ) } for\u30eb\u30fc\u30d7 1 2 3 4 let list = [ 3 , 7 , 9 , 12 , 8 , 5 ] for number in list { print ( \"number \\( number ) \" ) } while\u30eb\u30fc\u30d7 1 2 3 4 5 var number = 1 while number < 10 { print ( number ) number += 1 } switch case ruby\u307f\u305f\u3044\u306aRange\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4f7f\u3048\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 let age = 17 switch age { case 0. .. 6 : print ( \"kindergarden kid\" ) case 7. .. 12 : print ( \"primary school student\" ) case 13. .. 15 : print ( \"junior high school student\" ) case 16. .. 18 : print ( \"high school student\" ) case 19. .. 22 : print ( \"college student\" ) default : print ( \"business person\" ) }","title":"Swift\u306e\u57fa\u790e1"},{"location":"swift/basic1/#swift1","text":"","title":"Swift\u306e\u57fa\u790e1"},{"location":"swift/basic1/#_1","text":"","title":"\u5909\u6570"},{"location":"swift/basic1/#let","text":"\u66f8\u304d\u63db\u3048\u3089\u308c\u3093\u3088 1 2 let immutableStr = \"hello\" immutableStr += \" world\" // error","title":"\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5909\u6570\u300clet\u300d"},{"location":"swift/basic1/#var","text":"\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u3088 1 2 var mutableStr = \"hello\" mutableStr += \" world\" // ok","title":"\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5909\u6570\u300cvar\u300d"},{"location":"swift/basic1/#_2","text":"\u660e\u793a\u7684\u306b\u578b\u3092\u5ba3\u8a00\u3057\u306a\u3044\u5834\u5408\u306f\u578b\u63a8\u8ad6\u306b\u306a\u308b 1 2 var str = \"string\" var int = 100","title":"\u578b\u63a8\u8ad6"},{"location":"swift/basic1/#_3","text":"1 var mutableStr : String = \"string\"","title":"\u578b\u5ba3\u8a00"},{"location":"swift/basic1/#_4","text":"\u578b\u306e\u6697\u9ed9\u5909\u63db\u306f\u3055\u308c\u306a\u3044\u306e\u3067\u5909\u63db\u3057\u3066\u3042\u3052\u308b 1 2 3 let label = \"This year is \" let year = 2019 let thisYear = label + String ( 2017 )","title":"\u578b\u306e\u6697\u9ed9\u5909\u63db"},{"location":"swift/basic1/#_5","text":"1 2 let year = 2019 let nextYear = \"Next year is \\( year + 1 ) \"","title":"\u6587\u5b57\u5217\u5185\u3067\u306e\u5909\u6570\u5c55\u958b"},{"location":"swift/basic1/#_6","text":"1 2 3 4 var itemsArray = [ \"foo\" , \"bar\" , \"baz\" ] // \u578b\u5ba3\u8a00\u3059\u308b\u5834\u5408 var itemsArray : [ String ] = [ \"foo\" , \"bar\" , \"baz\" ]","title":"\u914d\u5217"},{"location":"swift/basic1/#dictionary","text":"[\"\u30ad\u30fc\": \"\u5024\"]\u306e\u3088\u3046\u306b\u8a18\u3057\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 var itemsDictionary = [ \"foo\" : \"FOO\" , \"bar\" : \"BAR\" , \"baz\" : \"BAZ\" ] // \u578b\u5ba3\u8a00\u3059\u308b\u5834\u5408 var itemsDictionary : [ String : String ] = [ \"foo\" : \"FOO\" , \"bar\" : \"BAR\" , \"baz\" : \"BAZ\" ]","title":"\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\uff08Dictionary\u578b\uff09"},{"location":"swift/basic1/#_7","text":"","title":"\u5f0f"},{"location":"swift/basic1/#if-else","text":"1 2 3 4 5 if true == true { print ( \"true\" ) } else { print ( \"false\" ) }","title":"if else"},{"location":"swift/basic1/#for","text":"1 2 3 4 let list = [ 3 , 7 , 9 , 12 , 8 , 5 ] for number in list { print ( \"number \\( number ) \" ) }","title":"for\u30eb\u30fc\u30d7"},{"location":"swift/basic1/#while","text":"1 2 3 4 5 var number = 1 while number < 10 { print ( number ) number += 1 }","title":"while\u30eb\u30fc\u30d7"},{"location":"swift/basic1/#switch-case","text":"ruby\u307f\u305f\u3044\u306aRange\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4f7f\u3048\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 let age = 17 switch age { case 0. .. 6 : print ( \"kindergarden kid\" ) case 7. .. 12 : print ( \"primary school student\" ) case 13. .. 15 : print ( \"junior high school student\" ) case 16. .. 18 : print ( \"high school student\" ) case 19. .. 22 : print ( \"college student\" ) default : print ( \"business person\" ) }","title":"switch case"},{"location":"swift/basic2/","text":"Swift\u306e\u57fa\u790e2 \u95a2\u6570\uff08\u30e1\u30bd\u30c3\u30c9\uff09 1 2 3 4 5 6 7 8 9 10 11 12 func greet ( expression : String , person : String ) -> String { return \" \\( expression ) \\( person ) .\" } // \u95a2\u6570\u306e\u547c\u3073\u51fa\u3057 greet ( expression : \"Hello\" , person : \"Mike\" ) // => \"Hello Mike.\" // \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4f7f\u3046\u3068\u3001\u95a2\u6570\u547c\u51fa\u3057\u6642\u306b\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306e\u30e9\u30d9\u30eb\u3092\u7701\u7565\u3067\u304d\u308b func greet ( _ expression : String , person : String ) -> String { return \" \\( expression ) \\( person ) .\" } greet ( \"Hello\" , person : \"Mike\" ) // => \"Hello Mike.\" \u30af\u30ed\u30fc\u30b8\u30e3 1 2 3 4 5 6 7 8 9 10 11 12 13 func incrementer () -> ( () -> Int ) { var count = 0 func increment () -> Int { count += 1 return count } return increment } var counter = incrementer () counter () // => 1 counter () // => 2 counter () // => 3 \u3053\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u6a5f\u80fd\u306b\u3088\u308a\u3001Swift\u3067\u306fmap\u3001filter\u3001reduce\u7b49\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3001\u5f15\u6570\u3068\u3057\u3066\u7121\u540d\u95a2\u6570\u306e\u30d6\u30ed\u30c3\u30af\u30b3\u30fc\u30c9\u3092\u6e21\u3057\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b 1 2 3 4 5 6 7 8 9 10 11 var numbers = [ 3 , 7 , 9 , 12 , 8 , 5 ] // \u914d\u5217\u306e\u8981\u7d20\u3092\u3059\u3079\u30662\u500d\u306b\u3059\u308b numbers . map ({ ( number : Int ) -> Int in return number * 2 }) // => [6, 14, 18, 24, 16, 10] // \u5947\u6570\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b numbers . filter ({ ( number : Int ) -> Bool in return number % 2 == 1 }) // => [3, 7, 9, 5] // \u3059\u3079\u3066\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b numbers . reduce ( 0 , { ( total : Int , number : Int ) -> Int in return total + number }) // => 44 \u30af\u30e9\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 class MyApp { // Shape\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9 class Shape { // name\u30d7\u30ed\u30d1\u30c6\u30a3\uff08\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\uff09 var name : String // \u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\uff08\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\uff09 init ( name : String ) { self . name = name } } // \u56db\u89d2\u5f62: Rectangle\u304cShape\u3092\u7d99\u627f class Rectangle : Shape { var width : Double var height : Double init ( name : String , width : Double , height : Double ) { self . width = width self . height = height // \u89aa\u30af\u30e9\u30b9\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u547c\u3073\u51fa\u3057 super . init ( name : name ) } func area () -> Double { return width * height } } // \u4e09\u89d2\u5f62: Triangle\u304cShape\u3092\u7d99\u627f class Triangle : Shape { var bottom : Double var height : Double init ( name : String , bottom : Double , height : Double ) { self . bottom = bottom self . height = height super . init ( name : name ) } func area () -> Double { return bottom * height / 2.0 } } } // \u6b63\u65b9\u5f62\u3092\u4f5c\u6210 var square = MyApp . Rectangle ( name : \"My Square\" , width : 7.5 , height : 7.5 ) square . name // => \"My Square\" square . area () // => 56.25 // \u4e09\u89d2\u5f62\u3092\u4f5c\u6210 var triangle = MyApp . Triangle ( name : \"My Triangle\" , bottom : 10 , height : 8 ) triangle . name // => \"My Triangle\" triangle . area () // => 40","title":"Swift\u306e\u57fa\u790e2"},{"location":"swift/basic2/#swift2","text":"","title":"Swift\u306e\u57fa\u790e2"},{"location":"swift/basic2/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 func greet ( expression : String , person : String ) -> String { return \" \\( expression ) \\( person ) .\" } // \u95a2\u6570\u306e\u547c\u3073\u51fa\u3057 greet ( expression : \"Hello\" , person : \"Mike\" ) // => \"Hello Mike.\" // \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3092\u4f7f\u3046\u3068\u3001\u95a2\u6570\u547c\u51fa\u3057\u6642\u306b\u540d\u524d\u4ed8\u304d\u5f15\u6570\u306e\u30e9\u30d9\u30eb\u3092\u7701\u7565\u3067\u304d\u308b func greet ( _ expression : String , person : String ) -> String { return \" \\( expression ) \\( person ) .\" } greet ( \"Hello\" , person : \"Mike\" ) // => \"Hello Mike.\"","title":"\u95a2\u6570\uff08\u30e1\u30bd\u30c3\u30c9\uff09"},{"location":"swift/basic2/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 func incrementer () -> ( () -> Int ) { var count = 0 func increment () -> Int { count += 1 return count } return increment } var counter = incrementer () counter () // => 1 counter () // => 2 counter () // => 3 \u3053\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u6a5f\u80fd\u306b\u3088\u308a\u3001Swift\u3067\u306fmap\u3001filter\u3001reduce\u7b49\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3001\u5f15\u6570\u3068\u3057\u3066\u7121\u540d\u95a2\u6570\u306e\u30d6\u30ed\u30c3\u30af\u30b3\u30fc\u30c9\u3092\u6e21\u3057\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b 1 2 3 4 5 6 7 8 9 10 11 var numbers = [ 3 , 7 , 9 , 12 , 8 , 5 ] // \u914d\u5217\u306e\u8981\u7d20\u3092\u3059\u3079\u30662\u500d\u306b\u3059\u308b numbers . map ({ ( number : Int ) -> Int in return number * 2 }) // => [6, 14, 18, 24, 16, 10] // \u5947\u6570\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b numbers . filter ({ ( number : Int ) -> Bool in return number % 2 == 1 }) // => [3, 7, 9, 5] // \u3059\u3079\u3066\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b numbers . reduce ( 0 , { ( total : Int , number : Int ) -> Int in return total + number }) // => 44","title":"\u30af\u30ed\u30fc\u30b8\u30e3"},{"location":"swift/basic2/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 class MyApp { // Shape\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9 class Shape { // name\u30d7\u30ed\u30d1\u30c6\u30a3\uff08\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\uff09 var name : String // \u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\uff08\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\uff09 init ( name : String ) { self . name = name } } // \u56db\u89d2\u5f62: Rectangle\u304cShape\u3092\u7d99\u627f class Rectangle : Shape { var width : Double var height : Double init ( name : String , width : Double , height : Double ) { self . width = width self . height = height // \u89aa\u30af\u30e9\u30b9\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u547c\u3073\u51fa\u3057 super . init ( name : name ) } func area () -> Double { return width * height } } // \u4e09\u89d2\u5f62: Triangle\u304cShape\u3092\u7d99\u627f class Triangle : Shape { var bottom : Double var height : Double init ( name : String , bottom : Double , height : Double ) { self . bottom = bottom self . height = height super . init ( name : name ) } func area () -> Double { return bottom * height / 2.0 } } } // \u6b63\u65b9\u5f62\u3092\u4f5c\u6210 var square = MyApp . Rectangle ( name : \"My Square\" , width : 7.5 , height : 7.5 ) square . name // => \"My Square\" square . area () // => 56.25 // \u4e09\u89d2\u5f62\u3092\u4f5c\u6210 var triangle = MyApp . Triangle ( name : \"My Triangle\" , bottom : 10 , height : 8 ) triangle . name // => \"My Triangle\" triangle . area () // => 40","title":"\u30af\u30e9\u30b9"},{"location":"swift/basic3/","text":"Swift\u306e\u57fa\u790e3 Optional\u578b Swift\u306e\u8a00\u8a9e\u4ed5\u69d8\u306e\u7279\u5fb4\u3068\u3057\u3066\u3001nil\u3092\u5b89\u5168\u306b\u6271\u3046\u305f\u3081\u306bOptional\u3068\u3044\u3046\u578b\u304c\u5b58\u5728\u3059\u308b \u5909\u6570\u3092Optional\u578b\u3067\u5b9a\u7fa9\u3057\u306a\u3044\u9650\u308a\u3001\u5909\u6570\u306bnil\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Optional Int var optionalInt : Int ? = 5 var optionalInt : Optional < Int > = 5 // \u3053\u3046\u3082\u66f8\u3051\u308b // \u901a\u5e38\u306eInt var int : Int = 5 // Optional String var optionalStr : String ? = \"hello\" var optionalStr : Optional < String > = \"hello\" // \u3053\u3046\u3082\u66f8\u3051\u308b // \u901a\u5e38\u306eString var str : String = \"hello\" // Optional String\u306e\u5909\u6570\u306bnil\u3092\u4ee3\u5165 optionalStr = nil // \u901a\u5e38\u306eString\u306b\u306fnil\u3092\u4ee3\u5165\u3067\u304d\u306a\u3044 str = nil // => error: nil cannot be assigned to type 'String'","title":"Swift\u306e\u57fa\u790e3"},{"location":"swift/basic3/#swift3","text":"","title":"Swift\u306e\u57fa\u790e3"},{"location":"swift/basic3/#optional","text":"Swift\u306e\u8a00\u8a9e\u4ed5\u69d8\u306e\u7279\u5fb4\u3068\u3057\u3066\u3001nil\u3092\u5b89\u5168\u306b\u6271\u3046\u305f\u3081\u306bOptional\u3068\u3044\u3046\u578b\u304c\u5b58\u5728\u3059\u308b \u5909\u6570\u3092Optional\u578b\u3067\u5b9a\u7fa9\u3057\u306a\u3044\u9650\u308a\u3001\u5909\u6570\u306bnil\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Optional Int var optionalInt : Int ? = 5 var optionalInt : Optional < Int > = 5 // \u3053\u3046\u3082\u66f8\u3051\u308b // \u901a\u5e38\u306eInt var int : Int = 5 // Optional String var optionalStr : String ? = \"hello\" var optionalStr : Optional < String > = \"hello\" // \u3053\u3046\u3082\u66f8\u3051\u308b // \u901a\u5e38\u306eString var str : String = \"hello\" // Optional String\u306e\u5909\u6570\u306bnil\u3092\u4ee3\u5165 optionalStr = nil // \u901a\u5e38\u306eString\u306b\u306fnil\u3092\u4ee3\u5165\u3067\u304d\u306a\u3044 str = nil // => error: nil cannot be assigned to type 'String'","title":"Optional\u578b"},{"location":"swift/basic4/","text":"Swift\u306e\u57fa\u790e4 Optional\u578b\u3092\u30a2\u30f3\u30e9\u30c3\u30d7\u3059\u308b4\u3064\u306e\u65b9\u6cd5 Optional\u578b\u306fnil\u3092\u6271\u3048\u308b\u5909\u6570\u306b\u30e9\u30c3\u30d7(wrap)\u3055\u308c\u3066\u3044\u308b\u578b\u306b\u306a\u308b \u5024\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u300c\u30a2\u30f3\u30e9\u30c3\u30d7\uff08unwrap\uff09\u300d\u3059\u308b 1 2 3 // \u30a2\u30f3\u30e9\u30c3\u30d7\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b var optionalStr : String ? = \"hello\" optionalStr . uppercased () // => error: value of optional type 'String?' not unwrapped Optional\u578b\u306e\u5909\u6570\u3092\u30a2\u30f3\u30e9\u30c3\u30d7\u51e6\u7406\u3059\u308b\u306b\u306f\u30014\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308b Optional Binding Optional Chaining Forced Unwrapping ImplicitlyUnwrappedOptional\u578b Optional Binding \u4ee3\u8868\u7684\u306a\u65b9\u6cd5\u3067if\u3084guard\u3092\u4f7f\u3063\u3066\u30a2\u30f3\u30e9\u30c3\u30d7\u3059\u308b if\u3092\u3064\u304b\u3063\u305fOptional Binding\u306e\u30b3\u30fc\u30c9\u4f8b 1 2 3 4 5 6 7 8 9 func hello () -> String { let optionalStr : String ? = \"hello\" if let unwrappedStr = optionalStr { return unwrappedStr . uppercased () } return \"\" } print ( hello () ) // => HELLO guard\u3092\u4f7f\u3063\u305fOptional Binding\u306e\u30b3\u30fc\u30c9\u4f8b \u203bguard\u306f\u95a2\u6570\u306e\u4e2d\u3067\u3057\u304b\u4f7f\u3048\u307e\u305b\u3093 1 2 3 4 5 6 7 8 9 func helloWithGuard () -> String { let optionalStr : String ? = \"hello\" guard let unwrappedStr = optionalStr else { return \"\" } return unwrappedStr . uppercased () } print ( helloWithGuard () ) // => HELLO Optional Chaining \u30a2\u30f3\u30e9\u30c3\u30d7\u3057\u305f\u5909\u6570\u306e\u578b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3046\u65b9\u6cd5 Optinal\u578b\u306e\u5909\u6570\u306e\u5f8c\u308d\u306b?.\u3092\u4ed8\u3051\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u66f8\u304f \u5909\u6570\u304cnil\u3067\u306a\u3044\u5834\u5408\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u7d50\u679c\u3092\u3001nil\u306e\u5834\u5408\u306fnil\u3092\u8fd4\u3059 Ruby\u306e\uff08&.\uff09\u3068\u4f3c\u305f\u50cd\u304d\u3092\u3059\u308b 1 2 3 4 var optionalStr : String ? optionalStr ?. uppercased () // => nil optionalStr = \"hello\" optionalStr ?. uppercased () // => \"HELLO\" Forced Unwrapping \u6587\u5b57\u901a\u308a\u5f37\u5236\u7684\u306b\u30a2\u30f3\u30e9\u30c3\u30d7\u3092\u884c\u3046\u65b9\u6cd5 T?\u578b\u306e\u5909\u6570\u306e\u5f8c\u308d\u306b!\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u5909\u6570\u3092\u5f37\u5236\u7684\u306b\u30a2\u30f3\u30e9\u30c3\u30d7\u3059\u308b \u7d76\u5bfe\u306bnil\u3067\u306f\u306a\u3044\u5834\u5408\u306e\u307f\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff08\u30a8\u30e9\u30fc\u3067\u30a2\u30d7\u30ea\u304c\u843d\u3061\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u305f\u3081\uff09 1 2 var optionalStr : String ? = \"hello\" optionalStr !. uppercased () // => HELLO ImplicitlyUnwrappedOptional\u578b \u3053\u306e\u5909\u6570\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u969b\u306b\u901a\u5e38\u306e\u578b\u3068\u540c\u3058\u3088\u3046\u306a\u547c\u3073\u51fa\u3057\u65b9\u3067\u66f8\u3051\u308b \u305f\u3060\u3057\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u6642\u300cForced Unwrapping\u300d\u540c\u69d8\u306b\u7d76\u5bfe\u306bnil\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b 1 2 3 var implicitlyStr : String ! // nil implicitlyStr = \"hello\" // \"hello\" implicitlyStr . uppercased () // => \"HELLO\"","title":"Swift\u306e\u57fa\u790e4"},{"location":"swift/basic4/#swift4","text":"","title":"Swift\u306e\u57fa\u790e4"},{"location":"swift/basic4/#optional4","text":"Optional\u578b\u306fnil\u3092\u6271\u3048\u308b\u5909\u6570\u306b\u30e9\u30c3\u30d7(wrap)\u3055\u308c\u3066\u3044\u308b\u578b\u306b\u306a\u308b \u5024\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u300c\u30a2\u30f3\u30e9\u30c3\u30d7\uff08unwrap\uff09\u300d\u3059\u308b 1 2 3 // \u30a2\u30f3\u30e9\u30c3\u30d7\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b var optionalStr : String ? = \"hello\" optionalStr . uppercased () // => error: value of optional type 'String?' not unwrapped Optional\u578b\u306e\u5909\u6570\u3092\u30a2\u30f3\u30e9\u30c3\u30d7\u51e6\u7406\u3059\u308b\u306b\u306f\u30014\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308b Optional Binding Optional Chaining Forced Unwrapping ImplicitlyUnwrappedOptional\u578b","title":"Optional\u578b\u3092\u30a2\u30f3\u30e9\u30c3\u30d7\u3059\u308b4\u3064\u306e\u65b9\u6cd5"},{"location":"swift/basic4/#optional-binding","text":"\u4ee3\u8868\u7684\u306a\u65b9\u6cd5\u3067if\u3084guard\u3092\u4f7f\u3063\u3066\u30a2\u30f3\u30e9\u30c3\u30d7\u3059\u308b","title":"Optional Binding"},{"location":"swift/basic4/#ifoptional-binding","text":"1 2 3 4 5 6 7 8 9 func hello () -> String { let optionalStr : String ? = \"hello\" if let unwrappedStr = optionalStr { return unwrappedStr . uppercased () } return \"\" } print ( hello () ) // => HELLO","title":"if\u3092\u3064\u304b\u3063\u305fOptional Binding\u306e\u30b3\u30fc\u30c9\u4f8b"},{"location":"swift/basic4/#guardoptional-binding","text":"\u203bguard\u306f\u95a2\u6570\u306e\u4e2d\u3067\u3057\u304b\u4f7f\u3048\u307e\u305b\u3093 1 2 3 4 5 6 7 8 9 func helloWithGuard () -> String { let optionalStr : String ? = \"hello\" guard let unwrappedStr = optionalStr else { return \"\" } return unwrappedStr . uppercased () } print ( helloWithGuard () ) // => HELLO","title":"guard\u3092\u4f7f\u3063\u305fOptional Binding\u306e\u30b3\u30fc\u30c9\u4f8b"},{"location":"swift/basic4/#optional-chaining","text":"\u30a2\u30f3\u30e9\u30c3\u30d7\u3057\u305f\u5909\u6570\u306e\u578b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3046\u65b9\u6cd5 Optinal\u578b\u306e\u5909\u6570\u306e\u5f8c\u308d\u306b?.\u3092\u4ed8\u3051\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u66f8\u304f \u5909\u6570\u304cnil\u3067\u306a\u3044\u5834\u5408\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u7d50\u679c\u3092\u3001nil\u306e\u5834\u5408\u306fnil\u3092\u8fd4\u3059 Ruby\u306e\uff08&.\uff09\u3068\u4f3c\u305f\u50cd\u304d\u3092\u3059\u308b 1 2 3 4 var optionalStr : String ? optionalStr ?. uppercased () // => nil optionalStr = \"hello\" optionalStr ?. uppercased () // => \"HELLO\"","title":"Optional Chaining"},{"location":"swift/basic4/#forced-unwrapping","text":"\u6587\u5b57\u901a\u308a\u5f37\u5236\u7684\u306b\u30a2\u30f3\u30e9\u30c3\u30d7\u3092\u884c\u3046\u65b9\u6cd5 T?\u578b\u306e\u5909\u6570\u306e\u5f8c\u308d\u306b!\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u5909\u6570\u3092\u5f37\u5236\u7684\u306b\u30a2\u30f3\u30e9\u30c3\u30d7\u3059\u308b \u7d76\u5bfe\u306bnil\u3067\u306f\u306a\u3044\u5834\u5408\u306e\u307f\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff08\u30a8\u30e9\u30fc\u3067\u30a2\u30d7\u30ea\u304c\u843d\u3061\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u305f\u3081\uff09 1 2 var optionalStr : String ? = \"hello\" optionalStr !. uppercased () // => HELLO","title":"Forced Unwrapping"},{"location":"swift/basic4/#implicitlyunwrappedoptional","text":"\u3053\u306e\u5909\u6570\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u969b\u306b\u901a\u5e38\u306e\u578b\u3068\u540c\u3058\u3088\u3046\u306a\u547c\u3073\u51fa\u3057\u65b9\u3067\u66f8\u3051\u308b \u305f\u3060\u3057\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u6642\u300cForced Unwrapping\u300d\u540c\u69d8\u306b\u7d76\u5bfe\u306bnil\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b 1 2 3 var implicitlyStr : String ! // nil implicitlyStr = \"hello\" // \"hello\" implicitlyStr . uppercased () // => \"HELLO\"","title":"ImplicitlyUnwrappedOptional\u578b"},{"location":"web/redirect-status-code/","text":"\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9 301\u3068302\u3068\u3042\u308b\u304c\u3001Google\u306f\u3069\u3063\u3061\u3064\u304b\u3063\u3066\u3082\u3044\u3044\u3063\u3066\u3044\u3063\u3066\u308b\u3089\u3057\u3044 301\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u3064\u3044\u3066 301\u306f Permanent Redirect (\u6052\u4e45\u7684\u306a\u8ee2\u9001) \u3092\u610f\u5473\u3059\u308b 302\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u3064\u3044\u3066 302\u306f Temporary Redirect (\u4e00\u6642\u7684\u306a\u8ee2\u9001) \u3092\u610f\u5473\u3059\u308b","title":"\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9"},{"location":"web/redirect-status-code/#_1","text":"301\u3068302\u3068\u3042\u308b\u304c\u3001Google\u306f\u3069\u3063\u3061\u3064\u304b\u3063\u3066\u3082\u3044\u3044\u3063\u3066\u3044\u3063\u3066\u308b\u3089\u3057\u3044","title":"\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9"},{"location":"web/redirect-status-code/#301","text":"301\u306f Permanent Redirect (\u6052\u4e45\u7684\u306a\u8ee2\u9001) \u3092\u610f\u5473\u3059\u308b","title":"301\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u3064\u3044\u3066"},{"location":"web/redirect-status-code/#302","text":"302\u306f Temporary Redirect (\u4e00\u6642\u7684\u306a\u8ee2\u9001) \u3092\u610f\u5473\u3059\u308b","title":"302\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u3064\u3044\u3066"}]}